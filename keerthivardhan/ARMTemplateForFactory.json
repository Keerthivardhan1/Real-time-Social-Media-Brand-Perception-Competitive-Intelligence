{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "keerthivardhan"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase2'"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"AzureBlobStorage1_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobStorage1'"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0609-111523-etai625h"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "keerthivardhn-sqlserver.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "reviewsdb"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kv"
		},
		"AzureSqlDatabase2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "keerthivardhn-sqlserver.database.windows.net"
		},
		"AzureSqlDatabase2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "reviewsdb"
		},
		"AzureSqlDatabase2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kv"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "REVIEWS_DB"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Real time simulation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Real Time Simulation",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/keerthivardhan.t@anblicks.com/Real Time Simulation Prod"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-16T10:38:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/product_review_perception_and_analysis')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "clean and process the raw data",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/keerthivardhan.t@anblicks.com/Clean and Process the data prod"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "azure sql to snowflake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Parket file to sql",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "snowflakestage"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32"
										},
										"sink": {
											"name": "ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "ProductId",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCTID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UserId",
											"type": "String"
										},
										"sink": {
											"name": "USERID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProfileName",
											"type": "String"
										},
										"sink": {
											"name": "PROFILENAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Score",
											"type": "String"
										},
										"sink": {
											"name": "SCORE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Summary",
											"type": "String"
										},
										"sink": {
											"name": "SUMMARY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Text",
											"type": "String"
										},
										"sink": {
											"name": "Text",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Helpfulness",
											"type": "Double"
										},
										"sink": {
											"name": "HELPFULNESS",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "ReviewDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "REVIEWDATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "Int64"
										},
										"sink": {
											"name": "TIME",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Sentiment",
											"type": "String"
										},
										"sink": {
											"name": "SENTIMENT",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowflakeTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Parket file to sql",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "clean and process the raw data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "processed",
									"wildcardFileName": "part-*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProductId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "UserId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProfileName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProfileName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Score",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Score",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Summary",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Summary",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Text",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Text",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Helpfulness",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Helpfulness",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Time",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Sentiment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Sentiment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "call stored procedure to insert daily reviews",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "azure sql to snowflake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Snowflake1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "call insert_daily_reviews_procedure();\ncall create_aggregated_tables();"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"file_date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-16T11:07:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTable1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]",
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Parket file to sql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "processed",
									"wildcardFileName": "part-*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProductId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UserId",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "UserId",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProfileName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProfileName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Score",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Score",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Summary",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Summary",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Text",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Text",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Helpfulness",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Helpfulness",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Time",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Sentiment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Sentiment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-16T10:59:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductId",
						"type": "nvarchar"
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ProfileName",
						"type": "nvarchar"
					},
					{
						"name": "Score",
						"type": "nvarchar"
					},
					{
						"name": "Summary",
						"type": "nvarchar"
					},
					{
						"name": "Text",
						"type": "nvarchar"
					},
					{
						"name": "Helpfulness",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ReviewTime",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ProductReviews"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data.csv",
						"container": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "ProductId",
						"type": "String"
					},
					{
						"name": "UserId",
						"type": "String"
					},
					{
						"name": "ProfileName",
						"type": "String"
					},
					{
						"name": "HelpfulnessNumerator",
						"type": "String"
					},
					{
						"name": "HelpfulnessDenominator",
						"type": "String"
					},
					{
						"name": "Score",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Summary",
						"type": "String"
					},
					{
						"name": "Text",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "realtime_simulation.json",
						"container": "data"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Id": {
							"type": "integer"
						},
						"ProductId": {
							"type": "string"
						},
						"UserId": {
							"type": "string"
						},
						"ProfileName": {
							"type": "string"
						},
						"HelpfulnessNumerator": {
							"type": "integer"
						},
						"HelpfulnessDenominator": {
							"type": "integer"
						},
						"Score": {
							"type": "integer"
						},
						"Time": {
							"type": "integer"
						},
						"Summary": {
							"type": "string"
						},
						"Text": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "part-00000-tid-7159836927163670230-fdb17744-31b9-4d98-9b18-3469a82076d1-575-1-c000.snappy.parquet",
						"folderPath": "processed",
						"container": "data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Id",
						"type": "INT32"
					},
					{
						"name": "ProductId",
						"type": "UTF8"
					},
					{
						"name": "UserId",
						"type": "UTF8"
					},
					{
						"name": "ProfileName",
						"type": "UTF8"
					},
					{
						"name": "Score",
						"type": "UTF8"
					},
					{
						"name": "Time",
						"type": "UTF8"
					},
					{
						"name": "Summary",
						"type": "UTF8"
					},
					{
						"name": "Text",
						"type": "UTF8"
					},
					{
						"name": "Helpfulness",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "ID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "PRODUCTID",
						"type": "VARCHAR"
					},
					{
						"name": "USERID",
						"type": "VARCHAR"
					},
					{
						"name": "PROFILENAME",
						"type": "VARCHAR"
					},
					{
						"name": "SCORE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "SUMMARY",
						"type": "VARCHAR"
					},
					{
						"name": "Text",
						"type": "VARCHAR"
					},
					{
						"name": "HELPFULNESS",
						"type": "FLOAT"
					},
					{
						"name": "REVIEWTIME",
						"type": "TIMESTAMP_NTZ"
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "PRODUCTREVIEWS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobStorage1_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2485601713515684.4.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase2_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase2_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "TIOBDCF-TPA43544",
					"user": "keerthi",
					"database": "[parameters('Snowflake1_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake1_password')]"
					}
				},
				"version": "1.1"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Real time simulation trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Real time simulation",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2025-06-16T16:10:00",
						"endTime": "2025-06-16T16:40:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Real time simulation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/product review perception and analysis pipeline trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "product_review_perception_and_analysis",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2025-06-16T16:19:00",
						"endTime": "2025-06-16T16:35:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/product_review_perception_and_analysis')]"
			]
		}
	]
}